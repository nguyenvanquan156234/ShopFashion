@using System.Web.Script.Serialization
@using Newtonsoft.Json
@model IEnumerable<BanHangOnline.Models.OrderViewModel>
@{
    ViewBag.Title = "Thanh toán";
}
@{
    var serializerSettings = new JsonSerializerSettings
    {
        ReferenceLoopHandling = ReferenceLoopHandling.Ignore
    };
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Thêm jQuery UI -->
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<!-- Thêm CSS của jQuery UI -->
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<!-- Các tệp CSS khác -->
<link rel="stylesheet" type="text/css" href="~/Content/assets/styles/bootstrap4/bootstrap.min.css">
<link href="~/Content/assets/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
<link rel="stylesheet" type="text/css" href="~/Content/assets/plugins/OwlCarousel2-2.2.1/owl.carousel.css">
<link rel="stylesheet" type="text/css" href="~/Content/assets/plugins/OwlCarousel2-2.2.1/owl.theme.default.css">
<link rel="stylesheet" type="text/css" href="~/Content/assets/plugins/OwlCarousel2-2.2.1/animate.css">
<link rel="stylesheet" href="~/Content/assets/styles.css">
<link href="~/Content/assets/styles/categories_responsive.css" rel="stylesheet" />
<link href="~/Content/assets/styles/categories_styles.css" rel="stylesheet" />
<style>
    .col-md-9 .form-control {
        width: 100%;
        max-width: 100%;
    }
</style>


<div class="container product_section_container">
    <div class="row">
        <div class="col product_section clearfix">

            <!-- Breadcrumbs -->
            <div class="breadcrumbs d-flex flex-row align-items-center">
                <ul>
                    <li><a href="/">Home</a></li>
                    <li class="active"><a href="/"><i class="fa fa-angle-right" aria-hidden="true"></i>Giỏ hàng</a></li>
                </ul>
            </div>

            <!-- Sidebar -->
            <!-- Main Content -->
            <div class="row">
                <div class="col-md-12 text-center">
                    <h1>Thanh toán</h1>
                    <p>Bạn hãy kiểm tra lại thông tin đơn hàng</p>
                </div>

                <hr />
            </div>
           
                <div class="row">
                    <div style="display:none" id="show_success"></div>
                    <div class="col-md-9">
                        @using (Ajax.BeginForm("CheckOut", "ShoppingCart", new AjaxOptions
                        {
                            HttpMethod = "POST",
                            UpdateTargetId = "load-data",
                            OnComplete = "OnSuccessCO",
                            OnFailure = "OnFailure"
                        }, new { @ID = "myForm", @class = "needs-validation", novalidate = "novalidate" }))
                        {
                            @Html.AntiForgeryToken()
                            <h3>Thông tin khách hàng</h3>
                            <div class="form-group">
                                <label>
                                    Họ tên khách hàng
                                </label>
                                <input type="text" name="CustomerName" class="form-control" autocomplete="off" required /> <!-- Add 'required' attribute -->
                                <div class="invalid-feedback">Vui lòng nhập tên khách hàng.</div> <!-- Error message for validation -->
                            </div>
                            <div class="form-group">
                                <label>
                                    Số điện thoại
                                </label>
                                <input type="text" name="Phone" class="form-control" autocomplete="off" required /> <!-- Add 'required' attribute -->
                                <div class="invalid-feedback">Vui lòng nhập số điện thoại.</div> <!-- Error message for validation -->
                            </div>
                            <div class="form-group">
                                <label>
                                    Địa chỉ
                                </label>
                                <input type="text" name="Address" class="form-control" autocomplete="off" required /> <!-- Add 'required' attribute -->
                                <div class="invalid-feedback">Vui lòng nhập địa chỉ.</div> <!-- Error message for validation -->
                            </div>
                            <div class="form-group">
                                <label>
                                    Email
                                </label>
                                <input type="email" name="Email" class="form-control" autocomplete="off" required /> <!-- Add 'required' attribute -->
                                <div class="invalid-feedback">Vui lòng nhập địa chỉ email hợp lệ.</div> <!-- Error message for validation -->
                            </div>
                            <div class="form-group">
                                <label>
                                    Hình thức thanh toán
                                </label>
                                <select class="form-control" name="typePayment" required>
                                    <!-- Add 'required' attribute -->
                                    <option value="" disabled selected>Chọn hình thức thanh toán</option>
                                    <option value="1">COD</option>
                                    <option value="2">Chuyển Khoản</option>
                                </select>
                                <div class="invalid-feedback">Vui lòng chọn hình thức thanh toán.</div> <!-- Error message for validation -->
                            </div>
                            <div class="form-group">
                                <button type="submit" class="btn btn-block btn-success">Đặt hàng</button>
                            </div>
                        };
                    </div>
                    <div class="col-md-3">
                        @Html.Action("Partial_Item_ThanhToan", "ShoppingCart")
                    </div>

                </div>
           

        </div>
    </div>
</div>

@section scripts {
    <script>
        function OnSuccessCO(rs) {
            if (!rs.Success) {
                $('#show_success').html("Bạn đã đặt hàng thất bại")
            }
        }
        $(document).ready(function () {
            $('#myForm').validate({
                errorElement: 'div', // Set the error element to div
                errorClass: 'invalid-feedback', // Set the error class
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid'); // Add is-invalid class to the input field
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid'); // Remove is-invalid class from the input field
                },
                errorPlacement: function (error, element) {
                    // Custom error placement for each field
                    error.insertAfter(element);
                },
                rules: {
                    'CustomerName': {
                        required: true
                    },
                    'Phone': {
                        required: true
                    },
                    'Address': {
                        required: true
                    },
                    'Email': {
                        required: true,
                        email: true // Validate email format
                    },
                    'typePayment': {
                        required: true
                    }
                },
                messages: {
                    'CustomerName': 'Vui lòng nhập tên khách hàng.',
                    'Phone': 'Vui lòng nhập số điện thoại.',
                    'Address': 'Vui lòng nhập địa chỉ.',
                    'Email': {
                        required: 'Vui lòng nhập địa chỉ email.',
                        email: 'Vui lòng nhập địa chỉ email hợp lệ.'
                    },
                    'typePayment': 'Vui lòng chọn hình thức thanh toán.'
                }
            });
        });
        $(document).ready(function () {
            // Ensure that the slider function is available
            if ($.ui && $.ui.slider) {
                $("#slider-range").slider({
                    range: true,
                    min: 100000,
                    max: 1000000,
                    values: [150000, 500000],
                    slide: function (event, ui) {
                        $("#amount").val("₫" + ui.values[0] + " - ₫" + ui.values[1]);
                    },
                    create: function (event, ui) {
                        $("#amount").val("₫" + $("#slider-range").slider("values", 0) + " - ₫" + $("#slider-range").slider("values", 1));
                    }
                });

                $(".filter_button span").click(function () {
                    const minPrice = $("#slider-range").slider("values", 0);
                    const maxPrice = $("#slider-range").slider("values", 1);
                    filterProducts(minPrice, maxPrice);
                });

                $(".type_sorting_btn").click(function () {
                    const sortCriteria = $(this).data("sort");
                    $(".type_sorting_text").text($(this).text());
                    sortProducts(sortCriteria);
                });

                $(".num_sorting_btn").click(function () {
                    const num = $(this).data("num");
                    $(".num_sorting_text").text($(this).text());
                    showProducts(num);
                });

                function filterProducts(minPrice, maxPrice) {
                    const filtered = products.filter(product => product.PriceSale >= minPrice && product.PriceSale <= maxPrice);
                    displayProducts(filtered);
                }

                function sortProducts(criteria) {
                    let sortedProducts = [...products];
                    if (criteria === 'price') {
                        sortedProducts.sort((a, b) => a.PriceSale - b.PriceSale);
                    } else if (criteria === 'name') {
                        sortedProducts.sort((a, b) => a.Title.localeCompare(b.Title));
                    }
                    displayProducts(sortedProducts);
                }

                function showProducts(num) {
                    const numToShow = parseInt(num);
                    displayProducts(products.slice(0, numToShow));
                }

                function displayProducts(productsToDisplay) {
                    const productGrid = $("#product-grid");
                    productGrid.empty();
                    productsToDisplay.forEach(product => {
                        let str = "";
                        const img = product.ProductImage.find(x => x.IsDefault);
                        if (img != null) {
                            str = img.Image;
                        }
                        const productItem = `
                                        <div class="product-item men">
                                            <div class="product discount product_filter">
                                                <div class="product_image">
                                                    <img src="${str}" alt="">
                                                </div>
                                                <div class="favorite favorite_left"></div>
                                                <div class="product_bubble product_bubble_right product_bubble_red d-flex flex-column align-items-center"><span>-$20</span></div>
                                                <div class="product_info">
                                                    <h6 class="product_name"><a href="/chi-tiet/${product.Alias}-p${product.Id}">${product.Title}</a></h6>
                                                    <div class="product_price">${product.PriceSale}<span>${product.Price}</span></div>
                                                </div>
                                            </div>
                                            <div class="red_button add_to_cart_button"><a href="#">add to cart</a></div>
                                        </div>`;
                        productGrid.append(productItem);
                    });
                }

                // Initial display of products
                showProducts(3);
            } else {
                console.error("jQuery UI slider is not loaded");
            }
        });
        
     
    </script>
    <!-- Các tệp JS khác -->
    <script src="~/Content/assets/js/categories_custom.js"></script>
    <script src="~/Content/assets/styles/bootstrap4/popper.js"></script>
    <script src="~/Content/assets/styles/bootstrap4/bootstrap.min.js"></script>
    <script src="~/Content/assets/plugins/Isotope/isotope.pkgd.min.js"></script>
    <script src="~/Content/assets/plugins/OwlCarousel2-2.2.1/owl.carousel.js"></script>
    <script src="~/Content/assets/plugins/easing/easing.js"></script>
}
